---
import { basename } from 'path'
import Icon from '../../../components/Icon'
import Text from '../../../components/typography/Text'
import Layout from '../../../layouts/Layout.astro'
import Sidebar from '../../../layouts/Sidebar'
import typography from '../../../components/typography'
import Heading from '../../../components/typography/Heading'
import Card from '../../../components/Card'
import FAB from '../../../components/FAB'
import ToggleFAB from '../../../components/ToggleFAB'
import categories from '../../../content/articles/_categories'
import { prettyDate } from '../../../lib/prettyDate'
import { BackFAB } from '../../../components/BackFAB'
import { Pagination } from '../../../components/Pagination'

const articles = (await Astro.glob('../../../content/articles/*.mdx')).map(article => ({
  ...article,
  slug: basename(article.file).split('.')[0]
}))
  .filter(article => article.frontmatter.category === Astro.params.category)
  .sort((a, b) => Date.parse(b.frontmatter.created) - Date.parse(a.frontmatter.created))
const index = articles.findIndex(article => article.slug === Astro.params.slug)
const article = articles[index]
const prevArticle = articles[index - 1]
const nextArticle = articles[index + 1]

const { title, description, created: rawCreated } = article!.frontmatter
const created = new Date(rawCreated)
const { Content } = article!
const category = categories.find(category => category.slug === Astro.params.category)

if (!article || article.frontmatter.category !== category?.slug) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found'
  })
}
---
<Layout title={title} tabs={false}>
  <div slot="sidebar" class="flex flex-col gap-2">
    {category && (
      <Sidebar.Header>
        <a href={`/articles/${category.slug}`}>
          <Text>
            <Icon name="chevron-left" size='sm' />
            {category.name}
          </Text>
        </a>
      </Sidebar.Header>
    )}
    <div class="h-[calc(100vh-16rem)] overflow-scroll w-full">
      {articles.map(article => (
        <Sidebar.Link href={`/articles/${article.frontmatter.category}/${article.slug}`}>
          <Icon name='article' />
          {article.frontmatter.title}
        </Sidebar.Link>
      ))}
    </div>
  </div>
  <div class="w-full">
    <Card>
      <div class="sticky top-0 flex flex-row justify-between pb-4 border-b border-slate-200 dark:border-slate-700">
        <BackFAB defaultHref={`/articles/${category!.slug}`} client:idle />
        <div class="inline-block ml-6 mt-2">
          <Heading as='h2' size={4}>
            <Text gradient='warning'>
              Chris D. MacRae
            </Text>
          </Heading>
        </div>
        <ToggleFAB client:idle />
      </div>
      <div class="flex flex-row gap-4">
        <nav class="relative hidden lg:block pt-8 pl-1">
          <Pagination 
            prevHref={prevArticle ? `/articles/${prevArticle.frontmatter.category}/${prevArticle?.slug}` : undefined}
            nextHref={nextArticle ? `/articles/${nextArticle.frontmatter.category}/${nextArticle?.slug}` : undefined}
            client:idle
          />
        </nav>
        <div class="shrink-0 grow max-w-full items-center relative flex flex-col gap-4 -mb-4 h-[calc(100vh-6.5rem)] ios:h-[calc(100vh-12rem)] ios:lg:h-[calc(100vh-9rem)] lg:h-[calc(100vh-7.25rem)] overflow-scroll">
          <article class="flex flex-col gap-4 w-full max-w-[40rem] pt-4 lg:pt-8">
            <section class="flex flex-col gap-2 pt-2 pb-8">
              <Text>
                <span class="leading-10 break-keep">{prettyDate(created)} · {(article as any).readingTime.text} · <a href={`/articles/${category?.slug}`}><span class="rounded-full bg-slate-200 dark:bg-slate-800 p-2 whitespace-nowrap">{category?.name}</span></a></span>
              </Text>
              <Heading as='h1' size={1}>
                {title}
              </Heading>
              <Text color='muted'>
                <strong>{description}</strong>
              </Text>
            </section>
            <Content components={typography} />
          </article>
          <nav class="relative w-fit lg:hidden m-auto">
            <FAB direction='horizontal'>
              <FAB.Button>
                <Icon name="chevron-up" size='md' />
              </FAB.Button>
              <FAB.Button>
                <Icon name="chevron-down" size='md' />
              </FAB.Button>
            </FAB>
          </nav>
          <div />
        </div>
      </div>
    </Card>
  </div>
</Layout>