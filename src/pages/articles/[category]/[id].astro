---
import Icon from '../../../lib/@ui/Icon'
import Text from '../../../lib/@ui/typography/Text'
import Layout from '../../../layouts/Layout.astro'
import Sidebar from '../../../layouts/Sidebar'
import typography from '../../../lib/@ui/typography'
import Heading from '../../../lib/@ui/typography/Heading'
import Card from '../../../lib/@ui/Card'
import ToggleFAB from '../../../components/ToggleFAB'
import categories from '../../../content/articles/_categories'
import { prettyDate } from '../../../lib/prettyDate'
import { BackFAB } from '../../../components/BackFAB'
import { Pagination } from '../../../components/Pagination'
import { getArticles } from '../../../content/articles'
import type { CollectionEntry } from "astro:content"
import { generateUrl } from '../../api/og.png'

export const prerender = true
export const getStaticPaths = async () => {
  const allArticles = await getArticles({
    drafts: import.meta.env.DEV
  })

  return allArticles.map((article, index) => {
    const prevArticle = allArticles[index - 1]
    const nextArticle = allArticles[index + 1]
    const id = article.slug.split("/").pop()
    const category = article.data.category
    const articles = allArticles.filter(article => article.data.category === category)

    return {
      params: { id, category },
      props: { article, prevArticle, nextArticle, articles }
    }
  })
}

export interface Props {
  category: string
  article: CollectionEntry<"articles">
  prevArticle: CollectionEntry<"articles">
  nextArticle: CollectionEntry<"articles">
  articles: CollectionEntry<"articles">[]
}

const { article, prevArticle, nextArticle, articles } = Astro.props
const category = categories.find(category => category.slug === article.data.category)!
const { title, description, pubDate } = article!.data
const ogImageUrl = generateUrl({ title, category: category.name, color: category!.color })
const { Content } = await article.render()
---
<Layout 
  title={title} 
  description={description}
  tabs={false}
  graph={{
    og: {
      type: 'website',
      title: title,
      site_name: Astro.site!.origin,
      description: description,
      url: Astro.url.toString(),
      image: ogImageUrl.toString()
    }
  }}
>
  <div slot="sidebar" class="flex flex-col gap-2">
    {category && (
      <Sidebar.Header>
        <a href={`/articles/${category.slug}`}>
          <Text>
            <Icon name="chevron-left" size='sm' />
            {category.name}
          </Text>
        </a>
      </Sidebar.Header>
    )}
    <div class="h-[calc(100vh-16rem)] overflow-scroll w-full">
      {articles.map(article => (
        <Sidebar.Link href={article.slug}>
          <Icon name='article' />
          {article.data.title}
        </Sidebar.Link>
      ))}
    </div>
  </div>
  <div class="w-full">
    <Card>
      <div class="sticky top-0 flex flex-row justify-between pb-4 border-b border-slate-200 dark:border-slate-700">
        <BackFAB defaultHref={`/articles/${category.slug}`} client:idle />
        <a href="/" class="inline-block ml-6 mt-2" rel="preload">
          <Heading as='h2' size={4}>
            <Text gradient='warning'>
              Chris D. MacRae
            </Text>
          </Heading>
        </a>
        <ToggleFAB client:idle />
      </div>
      <div class="flex flex-row gap-4">
        <nav class="relative hidden lg:block pt-8 pl-1">
          <Pagination 
            prevHref={prevArticle ? prevArticle?.slug : undefined}
            nextHref={nextArticle ? nextArticle?.slug : undefined}
            client:idle
          />
        </nav>
        <div class="shrink-0 grow max-w-full items-center relative flex flex-col gap-4 -mb-3 h-[calc(100vh-6.5rem)] ios:h-[calc(100vh-12rem)] ios:lg:h-[calc(100vh-9rem)] lg:h-[calc(100vh-7.25rem)] overflow-y-scroll overflow-x-hidden">
          <article class="flex flex-col gap-4 w-full max-w-[40rem] py-4 lg:py-8">
            <section class="flex flex-col gap-2 pt-2 pb-8">
              <Text>
                <span class="leading-10 break-keep">{prettyDate(pubDate)} · {(article as any).readingTime?.text} · <a href={`/articles/${category.slug}`}><span class="rounded-full bg-slate-200 dark:bg-slate-800 p-2 whitespace-nowrap">{category?.name}</span></a></span>
              </Text>
              <Heading as='h1' size={1}>
                {title}
              </Heading>
              <Text color='muted'>
                <strong>{description}</strong>
              </Text>
            </section>
            <Content components={typography} />
          </article>
          <nav class="relative w-fit lg:hidden m-auto">
            <Pagination 
              direction='horizontal'
              prevHref={prevArticle ? prevArticle?.slug : undefined}
              nextHref={nextArticle ? nextArticle?.slug : undefined}
              client:idle
            />
          </nav>
          <div />
        </div>
      </div>
    </Card>
  </div>
</Layout>